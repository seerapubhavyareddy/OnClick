// prisma/schema.prisma - Updated for Phase 2
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  
  // App-specific fields
  meetings      Meeting[]
  
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Meeting {
  id                String   @id @default(cuid())
  userId            String
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // Google Calendar data
  calendarEventId   String?
  title             String
  description       String?
  startTime         DateTime
  endTime           DateTime?
  attendees         Json?    // Array of attendee objects
  meetingUrl        String?  // Zoom/Teams/Meet URL
  platform          String?  // 'zoom', 'teams', 'meet', 'webex'
  
  // Recall.ai data (Phase 2 additions)
  recallBotId       String?
  recallBotStatus   String?  // 'scheduled', 'joining', 'in_call', 'call_ended', 'done'
  
  // Settings
  noteTakerEnabled  Boolean  @default(false)
  
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  
  // Ensure unique combination of user and calendar event
  @@unique([userId, calendarEventId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}